apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: zookeeper
    app.kubernetes.io/instance: zookeeper
    app.kubernetes.io/name: zookeeper
spec:
  serviceName: zookeeper-headless
  replicas: {{ .Values.zookeeper.replicas }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/component: zookeeper
      app.kubernetes.io/instance: zookeeper
      app.kubernetes.io/name: zookeeper
  template:
    metadata:
      labels:
        app.kubernetes.io/component: zookeeper
        app.kubernetes.io/instance: zookeeper
        app.kubernetes.io/name: zookeeper
      name: zookeeper
    spec:
      containers:
      - command:
          - bash
          - -ec
          - |
            # Execute entrypoint as usual after obtaining ZOO_SERVER_ID
            # check ZOO_SERVER_ID in persistent volume via myid
            # if not present, set based on POD hostname
            if [[ -f "/bitnami/zookeeper/data/myid" ]]; then
              export ZOO_SERVER_ID="$(cat /bitnami/zookeeper/data/myid)"
            else
              HOSTNAME=`hostname -s`
              if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
                ORD=${BASH_REMATCH[2]}
                export ZOO_SERVER_ID=$((ORD + 1 ))
              else
                echo "Failed to get index from hostname $HOST"
                exit 1
              fi
            fi
            exec /entrypoint.sh /run.sh
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: ZOO_DATA_LOG_DIR
        - name: ZOO_PORT_NUMBER
          value: "2181"
        - name: ZOO_TICK_TIME
          value: "2000"
        - name: ZOO_INIT_LIMIT
          value: "10"
        - name: ZOO_SYNC_LIMIT
          value: "5"
        - name: ZOO_PRE_ALLOC_SIZE
          value: "65536"
        - name: ZOO_SNAPCOUNT
          value: "100000"
        - name: ZOO_MAX_CLIENT_CNXNS
          value: "60"
        - name: ZOO_4LW_COMMANDS_WHITELIST
          value: srvr, mntr, ruok
        - name: ZOO_LISTEN_ALLIPS_ENABLED
          value: "no"
        - name: ZOO_AUTOPURGE_INTERVAL
          value: "0"
        - name: ZOO_AUTOPURGE_RETAIN_COUNT
          value: "3"
        - name: ZOO_MAX_SESSION_TIMEOUT
          value: "40000"
        - name: ZOO_SERVERS
          {{- $replicaCount := int .Values.zookeeper.replicas }}
          {{- $zkContainerPort := int .Values.zookeeper.containerPort }}
          {{- $zkElectionPort := int .Values.zookeeper.electionPort }}
          value: {{ range $i, $e := until $replicaCount }}zookeeper-{{ $e }}.zookeeper-headless.accumulo.svc.cluster.local:{{ $zkContainerPort }}:{{ $zkElectionPort }}::{{ add $e 1 }} {{ end }}
        - name: ZOO_ENABLE_AUTH
          value: "no"
        - name: ZOO_HEAP_SIZE
          value: "1024"
        - name: ZOO_LOG_LEVEL
          value: ERROR
        - name: ALLOW_ANONYMOUS_LOGIN
          value: "yes"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: docker.io/bitnami/zookeeper:3.7.0-debian-10-r127
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - echo "ruok" | timeout 2 nc -w 2 localhost 2181 | grep imok
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: zookeeper
        ports:
        - containerPort: 2181
          name: client
          protocol: TCP
        - containerPort: 2888
          name: follower
          protocol: TCP
        - containerPort: 3888
          name: election
          protocol: TCP
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - echo "ruok" | timeout 2 nc -w 2 localhost 2181 | grep imok
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        securityContext:
          runAsUser: 1001
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /bitnami/zookeeper
            name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
      volumeMode: Filesystem
